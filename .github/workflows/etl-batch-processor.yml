name: ETL Smart Batch Processor

on:
  schedule:
    # 每15分钟执行一次，但只在交易时间内运行
    # 美东时间周一到周五 9:30 AM - 4:00 PM (UTC 13:30-20:00)
    - cron: '*/15 13-19 * * 1-5'  # 交易时间内每15分钟
    - cron: '0 20 * * 1-5'        # 收盘时最后一次运行
  workflow_dispatch:  # 允许手动触发
    inputs:
      force_run:
        description: 'Force run outside trading hours'
        required: false
        default: 'false'
        type: boolean

jobs:
  etl-batch-process:
    runs-on: ubuntu-latest
    timeout-minutes: 170  # 170分钟超时，确保160分钟运行时间限制有缓冲
    
    steps:
      - name: Check Trading Hours
        id: check-trading-hours
        run: |
          # 检查是否在交易时间内或强制运行
          force_run="${{ github.event.inputs.force_run || 'false' }}"
          
          if [ "$force_run" = "true" ]; then
            echo "🔧 Force run enabled - bypassing trading hours check"
            echo "should_run=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # 获取当前UTC时间
          current_hour=$(date -u +%H)
          current_minute=$(date -u +%M)
          current_day=$(date -u +%u)  # 1=Monday, 7=Sunday
          
          echo "⏰ Current UTC time: $(date -u '+%H:%M on %Y-%m-%d (day %u)')"
          echo "🕐 Approximate ET time: $(date -d '-4 hours' '+%H:%M on %Y-%m-%d') (may vary with DST)"
          
          # 检查是否为工作日 (Monday=1 to Friday=5)
          if [ "$current_day" -gt 5 ]; then
            echo "📅 Weekend detected - skipping ETL batch processing"
            echo "should_run=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # 检查是否在交易时间内 (UTC 13:30-20:00 approximately ET 9:30-16:00)
          trading_start_hour=13
          trading_start_minute=30
          trading_end_hour=20
          trading_end_minute=0
          
          # 转换当前时间为分钟数便于比较
          current_minutes=$((current_hour * 60 + current_minute))
          trading_start_minutes=$((trading_start_hour * 60 + trading_start_minute))
          trading_end_minutes=$((trading_end_hour * 60 + trading_end_minute))
          
          if [ "$current_minutes" -ge "$trading_start_minutes" ] && [ "$current_minutes" -le "$trading_end_minutes" ]; then
            echo "📈 Within trading hours - proceeding with ETL batch processing"
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "🌙 Outside trading hours - skipping ETL batch processing"
            echo "💰 This saves approximately 60% of database costs"
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Checkout repository
        if: steps.check-trading-hours.outputs.should_run == 'true'
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        if: steps.check-trading-hours.outputs.should_run == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        if: steps.check-trading-hours.outputs.should_run == 'true'
        run: npm ci
        
      - name: Run ETL Batch Process
        if: steps.check-trading-hours.outputs.should_run == 'true'
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEON_DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}
          FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          echo "🚀 Starting ETL Smart Batch Processor at $(date)"
          echo "📋 Processing stocks with 160-minute runtime limit..."
          echo "⏱️ Each batch: 50 stocks, 13-second delay (Polygon API limit)"
          
          # 运行智能分批处理器，160分钟运行时间限制
          node _scripts/etl-smart-batch-processor.mjs
          
          echo "✅ ETL Smart Batch Processor completed at $(date)"
          
      - name: Report completion
        if: always()
        run: |
          should_run="${{ steps.check-trading-hours.outputs.should_run }}"
          
          echo "📋 ETL Smart Batch Processor job completed at $(date)"
          echo "Status: ${{ job.status }}"
          
          if [ "$should_run" = "true" ]; then
            echo "⏰ Runtime Limit: 160 minutes per execution"
            echo "📈 Executed during trading hours"
            
            # 如果失败，输出调试信息
            if [ "${{ job.status }}" != "success" ]; then
              echo "🔍 Debug Info:"
              echo "  - Workflow: ${{ github.workflow }}"
              echo "  - Run ID: ${{ github.run_id }}"
              echo "  - Check logs above for detailed error information"
            fi
          else
            echo "🌙 Skipped - outside trading hours"
            echo "💰 Cost savings: ~60% compared to 24/7 operation"
            echo "⏰ Next run: during trading hours (ET 9:30 AM - 4:00 PM, Mon-Fri)"
          fi