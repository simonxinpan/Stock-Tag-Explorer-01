name: ETL Smart Batch Processor

on:
  schedule:
    - cron: '*/15 * * * *'  # 每15分钟执行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  etl-batch-process:
    runs-on: ubuntu-latest
    timeout-minutes: 170  # 170分钟超时，确保160分钟运行时间限制有缓冲
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ETL Batch Process
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEON_DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}
          FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          echo "🚀 Starting ETL Smart Batch Processor at $(date)"
          echo "📋 Processing stocks with 160-minute runtime limit..."
          echo "⏱️ Each batch: 50 stocks, 13-second delay (Polygon API limit)"
          
          # 运行智能分批处理器，160分钟运行时间限制
          node _scripts/etl-smart-batch-processor.mjs
          
          echo "✅ ETL Smart Batch Processor completed at $(date)"
          
      - name: Report completion
        if: always()
        run: |
          echo "📋 ETL Smart Batch Processor job completed at $(date)"
          echo "Status: ${{ job.status }}"
          echo "⏰ Runtime Limit: 160 minutes per execution"
          
          # 如果失败，输出调试信息
          if [ "${{ job.status }}" != "success" ]; then
            echo "🔍 Debug Info:"
            echo "  - Workflow: ${{ github.workflow }}"
            echo "  - Run ID: ${{ github.run_id }}"
            echo "  - Check logs above for detailed error information"
          fi